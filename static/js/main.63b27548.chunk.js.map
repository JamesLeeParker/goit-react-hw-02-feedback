{"version":3,"sources":["Feadback/Statistic/Statistic.jsx","Feadback/FeedbackOptions/FeedbackOptions.jsx","Feadback/Section/Section.jsx","Feadback/Notifaction/Notifaction.jsx","Feadback/Feadback.jsx","App/App.jsx","index.js"],"names":["Statistic","state","counterFeedback","cpountPosFeedback","good","neutral","bad","FeedbackOptions","options","onLeaveFeedback","type","onClick","Section","title","children","Notifaction","Feadback","props","increaseFeedback","setState","prevState","degreaseFeedback","pervState","neutralFeedback","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","renderStatistics","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAYeA,EAZG,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,kBAC3C,OACE,qCACE,yCAAYF,EAAMG,QAClB,4CAAeH,EAAMI,WACrB,wCAAWJ,EAAMK,OACjB,0CAAaJ,KACb,sDAAyBC,EAAzB,WCGSI,EAVS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,wBAAQC,KAAK,SAASC,QAASH,EAA/B,SACGC,OCKMG,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCJQ,SAASC,IACtB,OAAO,sD,ICKHC,E,4MACJf,MAAQ,CACNG,KAAM,EAAKa,MAAMb,KACjBC,QAAS,EAAKY,MAAMZ,QACpBC,IAAK,EAAKW,MAAMX,K,EAGlBY,iBAAmB,WACjB,EAAKC,UAAS,SAACC,GACb,MAAO,CACLhB,KAAMgB,EAAUhB,KAAO,O,EAK7BiB,iBAAmB,WACjB,EAAKF,UAAS,SAACG,GACb,MAAO,CACLhB,IAAKgB,EAAUhB,IAAM,O,EAK3BiB,gBAAkB,WAChB,EAAKJ,UAAS,SAACC,GACb,MAAO,CACLf,QAASe,EAAUf,QAAU,O,EAKnCmB,mBAAqB,kBACnB,EAAKvB,MAAMG,KAAO,EAAKH,MAAMK,IAAM,EAAKL,MAAMI,S,EAEhDoB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,IAAM,EAAKH,qBAAwB,EAAKvB,MAAMG,O,4CAGnE,WACE,IAAMwB,EACJ,cAAC,EAAD,CACE3B,MAAO4B,KAAK5B,MACZC,gBAAiB2B,KAAKL,qBACtBrB,kBAAmB0B,KAAKJ,oCAItBrB,EAAOyB,KAAK5B,MAAMG,KAExB,OACE,qCACE,eAAC,EAAD,CAASS,MAAM,wBAAf,UACE,cAAC,EAAD,CACEL,QAASqB,KAAKX,iBACdT,gBAAiB,SAEnB,cAAC,EAAD,CACED,QAASqB,KAAKN,gBACdd,gBAAiB,YAEnB,cAAC,EAAD,CACED,QAASqB,KAAKR,iBACdZ,gBAAiB,WAGrB,cAAC,EAAD,CAASI,MAAM,YAAf,SACGT,GAAQ,EAAIwB,EAAmB,cAACb,EAAD,a,GAlEnBe,aAyERd,IC5EA,SAASe,IACtB,OACE,8BACE,cAAC,EAAD,CAAU3B,KAAM,EAAGC,QAAS,EAAGC,IAAK,MCD1C0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.63b27548.chunk.js","sourcesContent":["const Statistic = ({ state, counterFeedback, cpountPosFeedback }) => {\r\n  return (\r\n    <>\r\n      <div>Good: {state.good}</div>\r\n      <div>Neutral: {state.neutral}</div>\r\n      <div>Bad: {state.bad}</div>\r\n      <div>Total: {counterFeedback}</div>\r\n      <div>Positive feedback: {cpountPosFeedback}%</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n","const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={options}>\r\n        {onLeaveFeedback}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","export default function Notifaction() {\r\n  return <h2>There is no feedback</h2>;\r\n}\r\n","import { Component } from \"react\";\r\nimport Statistic from \"./Statistic/Statistic\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./Section/Section\";\r\nimport Notifaction from \"./Notifaction/Notifaction\";\r\n\r\nclass Feadback extends Component {\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n  };\r\n\r\n  increaseFeedback = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        good: prevState.good + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  degreaseFeedback = () => {\r\n    this.setState((pervState) => {\r\n      return {\r\n        bad: pervState.bad + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  neutralFeedback = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        neutral: prevState.neutral + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.bad + this.state.neutral;\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.floor((100 / this.countTotalFeedback()) * this.state.good);\r\n  };\r\n\r\n  render() {\r\n    const renderStatistics = (\r\n      <Statistic\r\n        state={this.state}\r\n        counterFeedback={this.countTotalFeedback()}\r\n        cpountPosFeedback={this.countPositiveFeedbackPercentage()}\r\n      />\r\n    );\r\n\r\n    const good = this.state.good;\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feadback\">\r\n          <FeedbackOptions\r\n            options={this.increaseFeedback}\r\n            onLeaveFeedback={\"Good\"}\r\n          />\r\n          <FeedbackOptions\r\n            options={this.neutralFeedback}\r\n            onLeaveFeedback={\"Neutral\"}\r\n          />\r\n          <FeedbackOptions\r\n            options={this.degreaseFeedback}\r\n            onLeaveFeedback={\"Bad\"}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistic\">\r\n          {good >= 1 ? renderStatistics : <Notifaction />}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feadback;\r\n","import { Component } from \"react\";\r\nimport Feedback from \"../Feadback/Feadback\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Feedback good={0} neutral={0} bad={0} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}